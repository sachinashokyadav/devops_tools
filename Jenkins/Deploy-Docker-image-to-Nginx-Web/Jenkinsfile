pipeline {
    agent any

    parameters {
        string(name: 'EC2_USER', defaultValue: 'ubuntu', description: 'EC2 username (ubuntu/ec2-user)')
        string(name: 'EC2_HOST', defaultValue: '<EC2-PUBLIC-IP>', description: 'EC2 Public IP or DNS')
        string(name: 'EC2_SSH_KEY', defaultValue: 'ec2-ssh-key', description: 'Jenkins Credential ID for EC2 private key')
        string(name: 'DOCKER_IMAGE', defaultValue: 'sachinashokyadav/notes-taking-website:latest', description: 'Docker Hub Image name with tag')
        string(name: 'DOCKER_CRED', defaultValue: 'docker-hub-cred', description: 'Jenkins Credential ID for DockerHub (Username/Password)')
    }

    stages {
        stage('Deploy from Docker Hub to EC2') {
            steps {
                sshagent([params.EC2_SSH_KEY]) {
                    withCredentials([usernamePassword(credentialsId: params.DOCKER_CRED, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh """
                            ssh -o StrictHostKeyChecking=no ${params.EC2_USER}@${params.EC2_HOST} '
                                # Update packages
                                sudo apt update -y

                                # Ensure Docker is running
                                sudo systemctl enable docker || true
                                sudo systemctl start docker || true

                                # Docker login
                                echo "$DOCKER_PASS" | sudo docker login -u "$DOCKER_USER" --password-stdin

                                # Stop & remove old container
                                sudo docker stop notes-website || true
                                sudo docker rm notes-website || true

                                # Pull image from Docker Hub
                                sudo docker pull ${params.DOCKER_IMAGE}

                                # Run container on port 80
                                sudo docker run -d --name notes-website -p 80:80 ${params.DOCKER_IMAGE}
                            '
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "üöÄ Container deployed successfully from Docker Hub! Access it at http://${params.EC2_HOST}"
        }
        failure {
            echo "‚ùå Deployment failed. Check Jenkins logs."
        }
    }
}
