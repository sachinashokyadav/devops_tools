pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-cred')  // Jenkins credential ID for Docker Hub
        DOCKER_IMAGE = "sachinashokyadav/notes-website"
        DEPLOY_SERVER = "ec2-user@<EC2-PUBLIC-IP>" // Replace with your EC2 user and public IP
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/<your-username>/<your-repo>.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} ."
                }
            }
        }

        stage('Login to Docker Hub & Push') {
            steps {
                script {
                    sh "echo ${DOCKER_HUB_CREDENTIALS_PSW} | docker login -u ${DOCKER_HUB_CREDENTIALS_USR} --password-stdin"
                    sh "docker push ${DOCKER_IMAGE}:${BUILD_NUMBER}"
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    sshagent(['ec2-ssh-key']) { // Jenkins credential ID for EC2 private key
                        sh """
                        ssh -o StrictHostKeyChecking=no ${DEPLOY_SERVER} '
                            docker login -u ${DOCKER_HUB_CREDENTIALS_USR} -p ${DOCKER_HUB_CREDENTIALS_PSW}
                            docker pull ${DOCKER_IMAGE}:${BUILD_NUMBER}
                            docker stop notes-website || true
                            docker rm notes-website || true
                            docker run -d --name notes-website -p 80:80 ${DOCKER_IMAGE}:${BUILD_NUMBER}
                        '
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Deployment successful!"
        }
        failure {
            echo "Pipeline failed. Please check logs."
        }
    }
}
