pipeline {
    agent any

    tools {
        maven 'maven'
    }

    parameters {
        credentials(name: 'gitCredentialsId', defaultValue: 'march-2025', description: 'Git credentials for GitHub')
        credentials(name: 'nexusCredentialsId', defaultValue: 'nexus-cred-id', description: 'Credentials for Nexus')
    }

    environment {
        MAVEN_SETTINGS = "${WORKSPACE}/.maven-settings.xml"
        GROUP_ID = "com.example"
        ARTIFACT_ID = "LaundryApp"
        VERSION = "1.0"
        PACKAGING = "jar"
        NEXUS_REPO_URL = "http://nexus:8081/repository/maven-releases"
        ARTIFACT_PATH = "com/example/LaundryApp/1.0/LaundryApp-1.0.jar"
    }

    stages {
        stage('Clone') {
            steps {
                git branch: 'jenkins-nexus', credentialsId: params.gitCredentialsId, url: 'https://github.com/devopsdecode/march-2025.git'
            }
        }

        stage('Build') {
            steps {
                dir('laundry-services') {
                    sh 'mvn compile'
                }
            }
        }

        stage('Test') {
            steps {
                dir('laundry-services') {
                    sh 'mvn test'
                }
            }
        }

        stage('Package') {
            steps {
                dir('laundry-services') {
                    sh 'mvn package'
                }
            }
        }

        stage('Deploy to Nexus') {
            steps {
                dir('laundry-services') {
                    withCredentials([usernamePassword(credentialsId: params.nexusCredentialsId, usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                        writeFile file: "${env.MAVEN_SETTINGS}", text: """
<settings>
  <servers>
    <server>
      <id>nexus-releases</id>
      <username>${env.NEXUS_USER}</username>
      <password>${env.NEXUS_PASS}</password>
    </server>
  </servers>
</settings>
                        """
                        sh "mvn deploy -s ${env.MAVEN_SETTINGS}"
                    }
                }
            }
        }

        stage('Download from Nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: params.nexusCredentialsId, usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                    script {
                        def artifactUrl = "${NEXUS_REPO_URL}/${ARTIFACT_PATH}"

                        echo "Downloading artifact from: ${artifactUrl}"

                        sh """
                            mkdir -p /tmp/nexus-artifacts
                            curl -u ${NEXUS_USER}:${NEXUS_PASS} -o /tmp/nexus-artifacts/${ARTIFACT_ID}-${VERSION}.${PACKAGING} ${artifactUrl}
                            ls -lh /tmp/nexus-artifacts
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed. Check logs for details.'
        }
    }
}
